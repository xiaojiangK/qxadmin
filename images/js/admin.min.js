/*!
 * qx-admin.js v1.0.0
 * (c) 2019 Qinxin-XiaojiangK
 * Released under the QiuXin License.
 */

// 全局变量
var global = {
    checkedData: [],
    selectData: [],
    datepicker: {
        "css": ['images/css/datepicker.min.css'],
        "js": ['images/js/moment.min.js', 'images/js/datepicker.min.js']
    }
};

// 模糊查询
function fuzzyQuery(list, keyWord) {
    var reg =  new RegExp(keyWord);
    var arr = [];
    for (var i = 0; i < list.length; i++) {
      if (reg.test(list[i])) {
        arr.push(list[i]);
      }
    }
    return arr.length > 0 ? true : false;
}

// 判断是否显示滚动条
function ifShowScroll(that) {
    const selectH = $(that).find('.qx-select_list').height();
    const scrollH = $(that).find('.qx-scrollbar').height();
    const scale = scrollH / selectH;
    if (selectH > scrollH) {
        $(that).find('.qx-scrollbar_bar').css({
            'top': 0,
            'opacity': 1,
            'height': scale * scrollH
        });
    } else {
        $(that).find('.qx-scrollbar_bar').css('opacity', 0);
    }
    // 判断滚动限制
    const barH = $(that).find('.qx-scrollbar_bar').height();
    $(that).find('.qx-scrollbar_wrap').scroll(function (){
        var top = $(this).scrollTop();
        if (top > scrollH - barH) {
            top = scrollH - barH;
        }
        $(this).siblings('.qx-scrollbar_bar').css('top', top);
    });
}

;(function($){
    // 单选框
    $.fn.radio = function (option){
        var config = {
            change: null
        };
        var opts = $.extend(config, option);

        // radio处理函数
        $(this).find('.qx-radio').each(function (){
            $(this).off().on('click', function (){
                const radio_input = $(this).find('.qx-radio_input');
                // 禁用状态
                if ($(radio_input).hasClass('is-disabled')) {
                    return;
                }
                $(this).siblings().find('.qx-radio_input').removeClass('is-checked');
                $(this).attr('aria-checked', true).siblings().removeAttr('aria-checked');
                $(radio_input).addClass('is-checked');
                if (opts.change) {
                    opts.change($(this).find('input').val());
                }
                return false;
            });
        });
    }

    // 多选框
    $.fn.checkbox = function (option){
        var config = {
            change: null
        };
        var opts = $.extend(config, option);

        // checkbox处理函数
        $(this).find('.qx-checkbox').each(function (){
            $(this).off().on('click', function (){
                const checkbox = $(this).find('.qx-checkbox_input');
                // 禁用状态
                if ($(checkbox).hasClass('is-disabled')) {
                    return;
                }
                // 获取组下标进行下一步操作
                const groupIdx = $(this).parent().attr('group-idx');
                const checkIdx = $(checkbox).attr('data-idx');
                const value = $(this).find('input').val();
                const gIdx = groupIdx ? groupIdx : 0;
                if ($(checkbox).hasClass('is-checked')) {
                    $(this).removeAttr('aria-checked');
                    $(checkbox).removeClass('is-checked');
                    global.checkedData[gIdx] = global.checkedData[gIdx].filter(item => {
                        return item.id != checkIdx;
                    });
                } else {
                    $(this).attr('aria-checked', true);
                    $(checkbox).addClass('is-checked');
                    global.checkedData[gIdx].push({
                        id: checkIdx,
                        value
                    });
                }
                if (opts.change) {
                    opts.change(global.checkedData[gIdx]);
                }
                return false;
            });
        });
    }

    // 下拉框
    $.fn.select = function (option){
        var config = {
            change: null
        };
        var opts = $.extend(config, option);

        // select处理函数
        $(this).find('.qx-select').each(function (){
            $(this).off().on('click', function (){
                const that = this;
                // 禁用状态
                if ($(this).hasClass('is-disabled')) {
                    return;
                }
                // 恢复默认
                $(this).find('.qx-select_item').show();
                $('.qx-select-dropdown').slideUp('fast');
                const input = $(this).find('.qx-input_inner');
                $('.qx-select .iconarrow').css('transform', 'rotate(0)');
                const dropdown = $(this).find('.qx-select-dropdown');
                // 可搜索
                if ($(this).hasClass('is-filter')) {
                    $(input).on('input', function (){
                        var result = [];
                        const keyword = $(this).val();
                        const empty = $(that).find('.qx-select_empty');
                        const selectItem = $(that).find('.qx-select_item');
                        if (keyword == '') {
                            $(selectItem).show();
                            $(empty).hide().text('');
                            ifShowScroll(that);
                            return;
                        }
                        $(selectItem).each(function (){
                            const text = $(this).text();
                            // 模糊搜索/整体匹配
                            if (fuzzyQuery(text.split(''), keyword) || text == keyword) {
                                $(this).show();
                                result.push(text);
                            } else {
                                $(this).hide();
                            }
                        });
                        // 检测是否有结果集
                        if (result.length == 0) {
                            ifShowScroll(that);
                            $(empty).show().text('无匹配数据');
                        } else {
                            ifShowScroll(that);
                            $(empty).hide().text('');
                        }
                        return;
                    });
                }
                if ($(dropdown).css('display') == 'none') {
                    $(dropdown).slideDown('fast');
                    $(this).find('.iconarrow').css('transform', 'rotate(180deg)');
                    // 是否显示滚动条
                    ifShowScroll(this);
                    // 点击页面下拉消失
                    $(document).on('click', function (){
                        $(dropdown).slideUp('fast');
                        $(this).find('.iconarrow').css('transform', 'rotate(0)');
                    });
                } else {
                    $(dropdown).slideUp('fast');
                    $('.qx-select .iconarrow').css('transform', 'rotate(0)');
                }
                // 点击每项
                $(this).find('.qx-select_item').each(function (){
                    $(this).off().on('click', function (){
                        // 可多选
                        if ($(that).hasClass('is-multiple')) {
                            const id = $(this).attr('data-idx');
                            if ($(this).hasClass('active')) {
                                $(this).removeClass('active');
                                global.selectData = global.selectData.filter(item => {
                                    return item.id != id
                                });
                            } else {
                                $(this).addClass('active');
                                global.selectData.push({
                                    id, value: $(this).text()
                                });
                            }
                            let value = '';
                            global.selectData.map((item, index) => {
                                if (index == global.selectData.length - 1) {
                                    value += `${item.value}`;
                                } else {
                                    value += `${item.value} / `;
                                }
                            });
                            $(input).val(value);
                            if (opts.change) {
                                opts.change(global.selectData);
                            }
                            return;
                        }
                        const value = $(this).text();
                        $(input).val(value);
                        $(this).addClass('active').siblings().removeClass('active');
                        if (opts.change) {
                            opts.change(value);
                        }
                    });
                });
                return false;
            });
        });
    }

})(window.jQuery);

$(function (){
    // 渲染radio元素
    (function (){
        $('qx-radio').each(function (index) {
            const name = $(this).attr('name');
            const size = $(this).attr('size');
            const checked = $(this).attr('checked');
            const button = $(this).attr('button') != undefined ? true : false;
            const bordered = $(this).attr('bordered') != undefined ? true : false;
            $(this).wrapAll(`<label role="radio" class="${size ? size+' ' : ''}${bordered ? 'qx-radio-border ' : ''}${button ? 'qx-radio-button ' : ''}qx-radio" ${checked ? 'aria-checked="true"' : ''}>`);
            $('.qx-radio').eq(index).html(`
                <span class="${checked ? 'is-checked ' : ''}${$(this).attr('disabled') ? 'is-disabled ' : ''}qx-radio_input">
                    <span class="qx-radio_inner"></span>
                    <input type="radio" name="${name ? name : ''}" value="${$(this).attr('value')}" class="qx-radio_original" />
                </span>
                <span class="qx-form_label">${$(this).text()}</span>
            `);
        });
        $('body').radio();
        
        // 渲染checkbox元素
        if ($('qx-checkbox-group').length <= 0) {
            global.checkedData.push([]);
            $('qx-checkbox').each(function (index) {
                const name = $(this).attr('name');
                const size = $(this).attr('size');
                const checked = $(this).attr('checked');
                const button = $(this).attr('button') != undefined ? true : false;
                const bordered = $(this).attr('bordered') != undefined ? true : false;
                $(this).wrapAll(`<label role="checkbox" class="${size ? size+' ' : ''}${bordered ? 'qx-checkbox-border ' : ''}${button ? 'qx-checkbox-button ' : ''}qx-checkbox" ${checked ? 'aria-checked="true"' : ''}></label>`);
                $('.qx-checkbox').eq(index).html(`
                    <span class="${checked ? 'is-checked ' : ''}${$(this).attr('disabled') ? 'is-disabled ' : ''}qx-checkbox_input" data-idx="${index}">
                        <span class="qx-checkbox_inner"></span>
                        <input type="checkbox" name="${name ? name : ''}" value="${$(this).attr('value')}" class="qx-checkbox_original" />
                    </span>
                    <span class="qx-form_label">${$(this).text()}</span>
                `);
                if (checked) {
                    global.checkedData[0].push({
                        id: `${index}`,
                        value: $('.qx-checkbox').eq(index).find('input').val()
                    });
                }
            });
        } else {
            // 渲染组
            $('qx-checkbox-group').each(function (idx){
                $(this).wrapAll(`<div class="qx-checkbox-group" group-idx="${idx}"></div>`);
                // 每一组元素添加数组
                global.checkedData.push([]);
                var checkbox = '';
                $(this).find('qx-checkbox').each(function (index){
                    const name = $(this).attr('name');
                    const size = $(this).attr('size');
                    const value = $(this).attr('value');
                    const checked = $(this).attr('checked');
                    const button = $(this).attr('button') != undefined ? true : false;
                    const bordered = $(this).attr('bordered') != undefined ? true : false;
                    checkbox += `<label role="checkbox" class="${size ? size+' ' : ''}${bordered ? 'qx-checkbox-border ' : ''}${button ? 'qx-checkbox-button ' : ''}qx-checkbox" ${checked ? 'aria-checked="true"' : ''}>
                        <span class="${checked ? 'is-checked ' : ''}${$(this).attr('disabled') ? 'is-disabled ' : ''}qx-checkbox_input" data-idx="${index}">
                            <span class="qx-checkbox_inner"></span>
                            <input type="checkbox" name="${name ? name : ''}" value="${value}" class="qx-checkbox_original" />
                        </span>
                        <span class="qx-form_label">${$(this).text()}</span>
                    </label>`;
                    if (checked) {
                        // 已选元素添加数据
                        global.checkedData[idx].push({
                            id: `${index}`,
                            value
                        });
                    }
                });
                $('.qx-checkbox-group').eq(idx).html(checkbox);
            });
        }
        $('body').checkbox();

        // 渲染select元素
        $('qx-select').each(function (index){
            const filterable = $(this).attr('filterable') != undefined ? true : false;
            const multiple = $(this).attr('multiple') != undefined ? true : false;
            const disabled = $(this).attr('disabled');
            $(this).wrapAll(`<div role="select" class="${multiple ? 'is-multiple ' : ''}${filterable ? 'is-filter ' : ''}${disabled ? 'is-disabled ' : ''}qx-select"></div>`);
            var options = '';
            var value = '';
            $(this).find('qx-option').each(function (index){
                const checked = $(this).attr('checked');
                const itemVal = $(this).attr('value');
                if (checked) {
                    value = itemVal;
                }
                options += `<li class="${checked ? 'active ' : ''}qx-select_item" data-idx="${index}">${itemVal}<span class="iconfont iconsuccess"></span></li>`
            });
            $('.qx-select').eq(index).html(`
                <div class="qx-input">
                    <input type="text" ${!filterable ? 'readonly' : ''} value="${value}" autocomplete="off" placeholder="${$(this).attr('placeholder')}" class="qx-input_inner" />
                    <span class="qx-input_suffix">
                        <i class="qx-input_icon iconfont iconarrow"></i>
                    </span>
                </div>
                <div class="qx-select-dropdown">
                    <div class="qx-scrollbar">
                        <div class="qx-scrollbar_wrap">
                            <ul class="qx-select_list">
                                ${options}
                            </ul>
                            <div class="qx-select_empty"></div>
                        </div>
                        <div class="qx-scrollbar_bar">
                            <div class="thumb"></div>
                        </div>
                    </div>
                </div>
            `);
        });
        $('body').select();
    })(window);
});

// 时间插件
// for (let i of global.datepicker.css) {
//     $('head').append(`<link rel="stylesheet" type="text/css" href="${i}" />`);
// }
// for (let i of global.datepicker.js) {
//     $('body').append(`<script src="${i}"></script>`);
// }
